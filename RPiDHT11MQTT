import Adafruit_DHT
import time
from AWSIoTPythonSDK.MQTTLib import AWSIoTMQTTClient

# Set the DHT sensor type (DHT11 or DHT22)
sensor = Adafruit_DHT.DHT11

# Set the GPIO pin where the DHT sensor is connected
pin = 4

# AWS IoT Core configuration
iot_endpoint = "myendpoints.iot.ap-southeast-1.amazonaws.com"
root_ca_path = "/home/kayz/certs/AmazonRootCA1.pem"
private_key_path = "/home/kayz/certs/myprivate.pem.key"
certificate_path = "/home/kayz/certs/security-certificate.pem.crt"
client_id = "dht11-device"

# Initialize the AWS IoT MQTT client
client = AWSIoTMQTTClient(client_id)
client.configureEndpoint(iot_endpoint, 8883)
client.configureCredentials(root_ca_path, private_key_path, certificate_path)

# Connect to AWS IoT Core
client.connect()

while True:
    try:
        humidity, temperature = Adafruit_DHT.read_retry(sensor, pin)
        if humidity is not None and temperature is not None:
            payload = '{{ "temperature": {0:0.1f}, "humidity": {1:0.1f} }}'.format(temperature, humidity)
            client.publish("yourtopic", payload, 1)
            print("Published: " + payload)
        else:
            print("Failed to read sensor data.")
        time.sleep(60)  # Publish data every 60 seconds
    except Exception as e:
        print("Error:", str(e))

# Disconnect from AWS IoT Core (this code may not be reached in practice)
client.disconnect()
