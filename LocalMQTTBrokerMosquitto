#include <ESP8266WiFi.h>
#include <PubSubClient.h>

// Replace with your Wi-Fi credentials and MQTT broker information
const char* ssid = "5G_CPE_UTM";
const char* password = "123456789";
const char* mqtt_server = "192.168.100.81"; // Replace with your MQTT broker's IP address or hostname
const int mqtt_port = 1883;
const char* mqtt_topic = "myled"; // Replace with your MQTT topic

const int ledPin = D1; // Pin connected to the LED (NodeMCU D1)

WiFiClient espClient;
PubSubClient client(espClient);

void setup() {
  pinMode(ledPin, OUTPUT);
  Serial.begin(115200);
  setup_wifi();
  client.setServer(mqtt_server, mqtt_port);
  client.setCallback(callback);
}

void loop() {
  if (!client.connected()) {
    reconnect();
  }
  client.loop();
}

void setup_wifi() {
  delay(10);
  // Connect to Wi-Fi
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.println("Connecting to WiFi...");
  }
  Serial.println("Connected to WiFi");
}

void callback(char* topic, byte* payload, unsigned int length) {
  String message;
  for (int i = 0; i < length; i++) {
    message += (char)payload[i];
  }
  Serial.print("Received message on topic: ");
  Serial.println(topic);
  Serial.print("Message: ");
  Serial.println(message);
  
  if (strcmp(topic, mqtt_topic) == 0) {
    if (message == "on") {
      digitalWrite(ledPin, HIGH); // Turn on the LED
    } else if (message == "off") {
      digitalWrite(ledPin, LOW); // Turn off the LED
    }
  }
}

void reconnect() {
  while (!client.connected()) {
    if (client.connect("ESP8266Client")) {
      Serial.println("Connected to MQTT broker");
      client.subscribe(mqtt_topic);
    } else {
      Serial.print("Failed to connect to MQTT broker, retrying in 5 seconds...");
      delay(5000);
    }
  }
}
